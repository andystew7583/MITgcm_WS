%%%v
%%% createrunfile.m
%%%
%%% Writes out a script that runs the MITgcm. Takes as arguments the name
%%% of the experiment, the number of nodes that will be used, and the wall
%%% time in hours (after which the computation will be cut off regardless 
%%% of whether it is complete).
%%%
function createPBSfile (dirname,expname,nodes,queue)

  %%% Set variables correctly for PBS
  headertext = [...
  '#!/bin/sh \n' ...
  '# \n' ...
  '# Your job name \n' ...
  '#$ -N ',expname,'\n' ...
  '# \n' ...
  '# Use current working directory \n' ...
  '#$ -cwd \n' ...
  '# \n' ...
  '# Join stdout and stderr \n' ...
  '#$ -j y \n' ...
  '# \n' ...
  '# Select queue \n' ...
  '#$ -q ',queue,' \n' ...
  '# \n' ...
  '# pe request for MPI. Set your number of processors here. \n' ...
  '# Make sure you use the "impi" parallel environment. \n' ...
  '#$ -pe impi ',num2str(nodes),' \n' ...
  '# \n' ...
  '# Run job through bash shell \n' ...
  '#$ -S /bin/bash \n' ...
  '# \n' ...
  '## Output file \n' ...
  '#$ -o ./output.txt \n' ...
  '#\n' ...
  '# The following is for reporting only. It is not really needed \n' ...
  '# to run the job. It will show up in your output file. \n' ...
  '# echo "Got $NSLOTS processors." \n' ...
  '# echo "Machines:" \n' ...
  '# cat $TMPDIR/machines \n' ...
  '# \n' ...
  '# Use full pathname to make sure we are using the right mpirun \n' ...
  '# Gridengine will set NSLOTS and TMPDIR for you \n' ...
  '/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/intel64/bin/mpirun -iface ib0 -genv I_MPI_DEBUG 6 -genv I_MPI_FABRICS shm:ofa -genv I_MPI_DAPL_PROVIDER ofa-v2-mlx4_0-1 -np $NSLOTS -machinefile $TMPDIR/machines ./mitgcmuv'];
  %'/opt/intel/impi_latest/bin64/mpirun -iface ib0 -genv I_MPI_DEBUG 6 -genv I_MPI_FABRICS shm:ofa -genv I_MPI_DAPL_PROVIDER ofa-v2-mlx4_0-1 -np $NSLOTS -machinefile $TMPDIR/machines ./mitgcmuv'];
  
  %%% Open template script
  templatename = './DEFAULTS/results/run_mitgcm';
  tfid = fopen(templatename,'r');
  if (tfid == -1)
    error(['Could not read template PBS run file: ',templatename]);
  end
  
  %%% Open output script and write header text
  wfid = fopen(fullfile(dirname,'run_mitgcm'),'w');
  if (wfid == -1)
    error('Could not open PBS script file');
  end
  fprintf(wfid,headertext); 
  
  %%% Copy over all template text
  count = 0;
  while true
    count = count+1;
    nextline = fgetl(tfid);    
    if ~ischar(nextline)
      break;
    end
    if (count <= 5) %%% skip placeholder comments at start of template
      continue;
    end
    fprintf(wfid,'%s\n',nextline);    
  end
  
  %%% Close files when we're done
  fclose(wfid);
  fclose(tfid);

end

